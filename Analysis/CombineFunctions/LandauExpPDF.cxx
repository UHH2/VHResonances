/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Landau core + exponential tail
// Andrea Malara
// 01/08/2019

#include "Riostream.h" 

#include "HiggsAnalysis/CombinedLimit/interface/LandauExpPDF.hpp"
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(LandauExpPDF)

LandauExpPDF::LandauExpPDF(const char *name, const char *title, RooAbsReal& _x,RooAbsReal& _mean, RooAbsReal& _sigma, RooAbsReal& _e0, RooAbsReal& _e1,RooAbsReal& _e2, RooAbsReal& _er0, RooAbsReal& _er1) :
RooAbsPdf(name,title), x("x","x",this,_x), mean("mean","mean",this,_mean), sigma("sigma","sigma",this,_sigma),
e0("e0","e0",this,_e0), e1("e1","e1",this,_e1), e2("e2","e2",this,_e2),
er0("er0","er0",this,_er0), er1("er1","er1",this,_er1) {
}


LandauExpPDF::LandauExpPDF(const LandauExpPDF& other, const char* name) :
RooAbsPdf(other,name), x("x",this,other.x), mean("mean",this,other.mean), sigma("sigma",this,other.sigma),
e0("e0",this,other.e0), e1("e1",this,other.e1), e2("e2",this,other.e2),
er0("er0",this,other.er0), er1("er1",this,other.er1) {
}

Double_t LandauExpPDF::evaluate() const {
  Double_t erf_=(x-er0)/er1;
  Double_t result= TMath::Landau(x, mean, sigma) * (1-erf(erf_))/2;
  result += exp(e0+e1*x+e2*x*x)* (1+erf(erf_))/2;
  return result;
}
